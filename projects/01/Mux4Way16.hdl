// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Put your code here:
	Not(in = sel[1],out = sel11);
	Not(in = sel[0],out = sel10);
	And(a = sel11,b = sel10,out = rsl0);
	And(a = sel11,b = sel[0],out = rsl1);
	And(a = sel[1],b = sel10,out = rsl2);
	And(a = sel[1],b = sel[0],out = rsl3);
	
	And(a = rsl0,b = a[0],out = tmp10);
	And(a = rsl1,b = b[0],out = tmp20);
	And(a = rsl2,b = c[0],out = tmp30);
	And(a = rsl3,b = d[0],out = tmp40);
	Or8Way(in[0] = tmp10,in[1] = tmp20,in[2] = tmp30,in[3] = tmp40,in[4..7] = false,out = out[0]);
	
	And(a = rsl0,b = a[1],out = tmp11);
	And(a = rsl1,b = b[1],out = tmp21);
	And(a = rsl2,b = c[1],out = tmp31);
	And(a = rsl3,b = d[1],out = tmp41);
	Or8Way(in[0] = tmp11,in[1] = tmp21,in[2] = tmp31,in[3] = tmp41,in[4..7] = false,out = out[1]);
	
	And(a = rsl0,b = a[2],out = tmp12);
	And(a = rsl1,b = b[2],out = tmp22);
	And(a = rsl2,b = c[2],out = tmp32);
	And(a = rsl3,b = d[2],out = tmp42);
	Or8Way(in[0] = tmp12,in[1] = tmp22,in[2] = tmp32,in[3] = tmp42,in[4..7] = false,out = out[2]);

	And(a = rsl0,b = a[3],out = tmp13);
	And(a = rsl1,b = b[3],out = tmp23);
	And(a = rsl2,b = c[3],out = tmp33);
	And(a = rsl3,b = d[3],out = tmp43);
	Or8Way(in[0] = tmp13,in[1] = tmp23,in[2] = tmp33,in[3] = tmp43,in[4..7] = false,out = out[3]);

	And(a = rsl0,b = a[4],out = tmp14);
	And(a = rsl1,b = b[4],out = tmp24);
	And(a = rsl2,b = c[4],out = tmp34);
	And(a = rsl3,b = d[4],out = tmp44);
	Or8Way(in[0] = tmp14,in[1] = tmp24,in[2] = tmp34,in[3] = tmp44,in[4..7] = false,out = out[4]);

	And(a = rsl0,b = a[5],out = tmp15);
	And(a = rsl1,b = b[5],out = tmp25);
	And(a = rsl2,b = c[5],out = tmp35);
	And(a = rsl3,b = d[5],out = tmp45);
	Or8Way(in[0] = tmp15,in[1] = tmp25,in[2] = tmp35,in[3] = tmp45,in[4..7] = false,out = out[5]);	

	And(a = rsl0,b = a[6],out = tmp16);
	And(a = rsl1,b = b[6],out = tmp26);
	And(a = rsl2,b = c[6],out = tmp36);
	And(a = rsl3,b = d[6],out = tmp46);
	Or8Way(in[0] = tmp16,in[1] = tmp26,in[2] = tmp36,in[3] = tmp46,in[4..7] = false,out = out[6]);
	
	And(a = rsl0,b = a[7],out = tmp17);
	And(a = rsl1,b = b[7],out = tmp27);
	And(a = rsl2,b = c[7],out = tmp37);
	And(a = rsl3,b = d[7],out = tmp47);
	Or8Way(in[0] = tmp17,in[1] = tmp27,in[2] = tmp37,in[3] = tmp47,in[4..7] = false,out = out[7]);

	And(a = rsl0,b = a[8],out = tmp18);
	And(a = rsl1,b = b[8],out = tmp28);
	And(a = rsl2,b = c[8],out = tmp38);
	And(a = rsl3,b = d[8],out = tmp48);
	Or8Way(in[0] = tmp18,in[1] = tmp28,in[2] = tmp38,in[3] = tmp48,in[4..7] = false,out = out[8]);

	And(a = rsl0,b = a[9],out = tmp19);
	And(a = rsl1,b = b[9],out = tmp29);
	And(a = rsl2,b = c[9],out = tmp39);
	And(a = rsl3,b = d[9],out = tmp49);
	Or8Way(in[0] = tmp19,in[1] = tmp29,in[2] = tmp39,in[3] = tmp49,in[4..7] = false,out = out[9]);

	And(a = rsl0,b = a[10],out = tmp110);
	And(a = rsl1,b = b[10],out = tmp210);
	And(a = rsl2,b = c[10],out = tmp310);
	And(a = rsl3,b = d[10],out = tmp410);
	Or8Way(in[0] = tmp110,in[1] = tmp210,in[2] = tmp310,in[3] = tmp410,in[4..7] = false,out = out[10]);

	And(a = rsl0,b = a[11],out = tmp111);
	And(a = rsl1,b = b[11],out = tmp211);
	And(a = rsl2,b = c[11],out = tmp311);
	And(a = rsl3,b = d[11],out = tmp411);
	Or8Way(in[0] = tmp111,in[1] = tmp211,in[2] = tmp311,in[3] = tmp411,in[4..7] = false,out = out[11]);

	And(a = rsl0,b = a[12],out = tmp112);
	And(a = rsl1,b = b[12],out = tmp212);
	And(a = rsl2,b = c[12],out = tmp312);
	And(a = rsl3,b = d[12],out = tmp412);
	Or8Way(in[0] = tmp112,in[1] = tmp212,in[2] = tmp312,in[3] = tmp412,in[4..7] = false,out = out[12]);

	And(a = rsl0,b = a[13],out = tmp113);
	And(a = rsl1,b = b[13],out = tmp213);
	And(a = rsl2,b = c[13],out = tmp313);
	And(a = rsl3,b = d[13],out = tmp413);
	Or8Way(in[0] = tmp113,in[1] = tmp213,in[2] = tmp313,in[3] = tmp413,in[4..7] = false,out = out[13]);

	And(a = rsl0,b = a[14],out = tmp114);
	And(a = rsl1,b = b[14],out = tmp214);
	And(a = rsl2,b = c[14],out = tmp314);
	And(a = rsl3,b = d[14],out = tmp414);
	Or8Way(in[0] = tmp114,in[1] = tmp214,in[2] = tmp314,in[3] = tmp414,in[4..7] = false,out = out[14]);

	And(a = rsl0,b = a[15],out = tmp115);
	And(a = rsl1,b = b[15],out = tmp215);
	And(a = rsl2,b = c[15],out = tmp315);
	And(a = rsl3,b = d[15],out = tmp415);
	Or8Way(in[0] = tmp115,in[1] = tmp215,in[2] = tmp315,in[3] = tmp415,in[4..7] = false,out = out[15]);
	
	}