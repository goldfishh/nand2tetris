function Line.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push pointer 0
push argument 0
push argument 1
push argument 2
push argument 3
call Line.move 5
pop temp 0
push pointer 0
return
function Line.move 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push argument 3
pop this 1
push argument 2
pop this 2
push argument 4
pop this 3
push constant 0
return
function Line.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 2
push this 1
push this 3
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Line.print 0
push argument 0
pop pointer 0
push constant 3
call String.new 1
push constant 120
call String.appendChar 2
push constant 49
call String.appendChar 2
push constant 58
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 0
call Output.printInt 1
pop temp 0
push constant 4
call String.new 1
push constant 124
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 49
call String.appendChar 2
push constant 58
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 2
call Output.printInt 1
pop temp 0
push constant 4
call String.new 1
push constant 124
call String.appendChar 2
push constant 120
call String.appendChar 2
push constant 50
call String.appendChar 2
push constant 58
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 1
call Output.printInt 1
pop temp 0
push constant 4
call String.new 1
push constant 124
call String.appendChar 2
push constant 120
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 58
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 3
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push constant 0
return
function Line.dX 0
push argument 0
pop pointer 0
push this 1
push this 0
sub
return
function Line.draw 7
push argument 0
pop pointer 0
push pointer 0
call Line.isPartIn 1
push pointer 0
call Line.isAllIn 1
or
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 0
pop local 1
push this 1
pop local 3
push this 2
pop local 2
push this 3
pop local 4
push pointer 0
push constant 512
call Line.crossesX 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
push this 3
add
push constant 2
call Math.divide 2
pop local 6
push local 3
push local 1
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 511
pop local 3
push local 6
pop local 4
goto IF_END2
label IF_FALSE2
push constant 511
pop local 1
push local 6
pop local 2
label IF_END2
label IF_FALSE1
push pointer 0
push constant 0
call Line.crossesX 2
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 2
push this 3
add
push constant 2
call Math.divide 2
pop local 6
push local 3
push local 1
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
pop local 3
push local 6
pop local 4
goto IF_END4
label IF_FALSE4
push constant 0
pop local 1
push local 6
pop local 2
label IF_END4
label IF_FALSE3
push pointer 0
push constant 256
call Line.crossesY 2
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 0
push this 1
add
push constant 2
call Math.divide 2
pop local 5
push local 4
push local 2
gt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 255
pop local 4
push local 5
pop local 3
goto IF_END6
label IF_FALSE6
push constant 255
pop local 2
push local 5
pop local 1
label IF_END6
label IF_FALSE5
push pointer 0
push constant 0
call Line.crossesY 2
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 0
push this 1
add
push constant 2
call Math.divide 2
pop local 5
push local 4
push local 2
lt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push constant 0
pop local 4
push local 5
pop local 3
goto IF_END8
label IF_FALSE8
push constant 0
pop local 2
push local 5
pop local 1
label IF_END8
label IF_FALSE7
push local 1
push local 2
push local 3
push local 4
call Line.new 4
pop local 0
push local 0
call Line.isAllIn 1
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 1
push local 2
push local 3
push local 4
call Screen.drawLine 4
pop temp 0
goto IF_END9
label IF_FALSE9
push constant 0
return
label IF_END9
push constant 0
return
function Line.crossesX 2
push argument 0
pop pointer 0
push this 0
push this 1
call Math.min 2
pop local 0
push this 0
push this 1
call Math.max 2
pop local 1
push local 0
push argument 1
lt
push local 1
push argument 1
gt
push local 1
push argument 1
eq
or
and
return
function Line.crossesY 2
push argument 0
pop pointer 0
push this 2
push this 3
call Math.min 2
pop local 0
push this 2
push this 3
call Math.max 2
pop local 1
push local 0
push argument 1
lt
push local 1
push argument 1
gt
push local 1
push argument 1
eq
or
and
return
function Line.isAllIn 0
push argument 0
pop pointer 0
push this 0
push constant 1
neg
gt
push this 0
push constant 512
lt
and
push this 2
push constant 1
neg
gt
and
push this 2
push constant 256
lt
and
push this 1
push constant 1
neg
gt
and
push this 1
push constant 512
lt
and
push this 3
push constant 1
neg
gt
and
push this 3
push constant 256
lt
and
return
function Line.isPartIn 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push pointer 0
push constant 0
call Line.crossesX 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 1
add
pop local 0
label IF_FALSE0
push pointer 0
push constant 512
call Line.crossesX 2
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 1
add
pop local 0
label IF_FALSE1
push pointer 0
push constant 0
call Line.crossesY 2
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push constant 1
add
pop local 0
label IF_FALSE2
push pointer 0
push constant 256
call Line.crossesY 2
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push constant 1
add
pop local 0
label IF_FALSE3
push this 0
push constant 1
neg
gt
push this 0
push constant 512
lt
and
push this 2
push constant 1
neg
gt
and
push this 2
push constant 256
lt
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
return
label IF_FALSE4
push this 1
push constant 1
neg
gt
push this 1
push constant 512
lt
and
push this 3
push constant 1
neg
gt
and
push this 3
push constant 256
lt
and
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
return
label IF_FALSE5
push local 0
push constant 1
gt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
not
return
label IF_FALSE6
push constant 0
return
