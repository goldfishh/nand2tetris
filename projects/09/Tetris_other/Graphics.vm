function Graphics.new 0
push constant 7
call Memory.alloc 1
pop pointer 0
push constant 192
pop this 5
push constant 271
pop this 6
push pointer 0
push argument 0
call Graphics.setType 2
pop temp 0
push constant 0
pop this 0
push constant 0
pop this 1
push constant 0
pop this 2
push constant 0
pop this 3
push pointer 0
return
function Graphics.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Graphics.getTop 0
push argument 0
pop pointer 0
push this 0
return
function Graphics.setType 0
push argument 0
pop pointer 0
push argument 1
push argument 1
push constant 2
call Math.divide 2
push constant 2
call Math.multiply 2
sub
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop this 4
push constant 0
return
label IF_FALSE0
push constant 2
pop this 4
push constant 0
return
function Graphics.drawInNext 0
push argument 0
pop pointer 0
push this 4
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push constant 294
push constant 69
call Graphics.draw 3
pop temp 0
label IF_FALSE0
push this 4
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push constant 286
push constant 73
call Graphics.draw 3
pop temp 0
label IF_FALSE1
push this 4
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push constant 294
push constant 65
call Graphics.draw 3
pop temp 0
label IF_FALSE2
push constant 0
return
function Graphics.eraseNext 0
push argument 0
pop pointer 0
push this 4
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push constant 294
push constant 69
call Graphics.erase 3
pop temp 0
label IF_FALSE0
push this 4
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push constant 286
push constant 73
call Graphics.erase 3
pop temp 0
label IF_FALSE1
push this 4
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push constant 294
push constant 65
call Graphics.erase 3
pop temp 0
label IF_FALSE2
push constant 0
return
function Graphics.drawInPanel 0
push argument 0
pop pointer 0
push pointer 0
push constant 224
push constant 0
call Graphics.draw 3
pop temp 0
push this 4
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop this 0
push constant 15
pop this 1
push constant 224
pop this 2
push constant 239
pop this 3
label IF_FALSE0
push this 4
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop this 0
push constant 7
pop this 1
push constant 224
pop this 2
push constant 255
pop this 3
label IF_FALSE1
push this 4
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
pop this 0
push constant 23
pop this 1
push constant 224
pop this 2
push constant 239
pop this 3
label IF_FALSE2
push constant 0
return
function Graphics.draw 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 4
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push argument 2
push argument 1
push constant 15
add
push argument 2
push constant 15
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push this 4
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push argument 2
push argument 1
push constant 31
add
push argument 2
push constant 7
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE1
push this 4
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
push argument 2
push constant 8
add
push argument 1
push constant 7
add
push argument 2
push constant 23
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 8
add
push argument 2
push argument 1
push constant 15
add
push argument 2
push constant 15
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE2
push constant 0
return
function Graphics.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 4
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push argument 2
push argument 1
push constant 15
add
push argument 2
push constant 15
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push this 4
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push argument 2
push argument 1
push constant 31
add
push argument 2
push constant 7
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE1
push this 4
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
push argument 2
push constant 8
add
push argument 1
push constant 7
add
push argument 2
push constant 23
add
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 8
add
push argument 2
push argument 1
push constant 15
add
push argument 2
push constant 15
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE2
push constant 0
return
function Graphics.moveLeft 0
push argument 0
pop pointer 0
push this 2
push this 5
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push this 2
push this 0
call Graphics.erase 3
pop temp 0
push this 2
push constant 8
sub
pop this 2
push this 3
push constant 8
sub
pop this 3
push pointer 0
push this 2
push this 0
call Graphics.draw 3
pop temp 0
label IF_FALSE0
push constant 150
call Sys.wait 1
pop temp 0
push constant 0
return
function Graphics.moveRight 0
push argument 0
pop pointer 0
push this 3
push this 6
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push this 2
push this 0
call Graphics.erase 3
pop temp 0
push this 3
push constant 8
add
pop this 3
push this 2
push constant 8
add
pop this 2
push pointer 0
push this 2
push this 0
call Graphics.draw 3
pop temp 0
label IF_FALSE0
push constant 150
call Sys.wait 1
pop temp 0
push constant 0
return
function Graphics.check1 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 2
lt
not
if-goto WHILE_END0
push argument 1
push constant 2
call Math.divide 2
push constant 2
call Math.multiply 2
push argument 1
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 1
push constant 2
call Math.divide 2
pop argument 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
return
function Graphics.check2 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push argument 2
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
label WHILE_EXP0
push local 0
push argument 2
add
push constant 16
lt
not
if-goto WHILE_END0
push argument 1
push constant 2
call Math.divide 2
pop argument 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push argument 2
lt
not
if-goto WHILE_END1
push argument 1
push constant 2
call Math.divide 2
push constant 2
call Math.multiply 2
push argument 1
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push argument 1
push constant 2
call Math.divide 2
pop argument 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
not
return
function Graphics.isDownable 9
push argument 0
pop pointer 0
push this 1
push constant 255
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 4
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 32
push this 1
push constant 1
add
call Math.multiply 2
push this 2
push constant 16
call Math.divide 2
add
push constant 16384
add
pop local 0
push local 0
push constant 1
add
pop local 1
push local 0
call Memory.peek 1
pop local 3
push local 1
call Memory.peek 1
pop local 4
push this 2
push this 2
push constant 16
call Math.divide 2
push constant 16
call Math.multiply 2
sub
pop local 7
push constant 16
push local 7
sub
pop local 6
push pointer 0
push local 3
push local 6
call Graphics.check1 3
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push local 4
push local 7
call Graphics.check2 3
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
return
label IF_FALSE3
label IF_FALSE2
label IF_FALSE1
push this 4
push constant 2
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 32
push this 1
push constant 1
add
call Math.multiply 2
push this 2
push constant 16
call Math.divide 2
add
push constant 16384
add
pop local 0
push local 0
push constant 1
add
pop local 1
push local 0
push constant 2
add
pop local 2
push local 0
call Memory.peek 1
pop local 3
push local 1
call Memory.peek 1
pop local 4
push local 2
call Memory.peek 1
pop local 5
push this 2
push this 2
push constant 16
call Math.divide 2
push constant 16
call Math.multiply 2
sub
pop local 7
push constant 16
push local 7
sub
pop local 6
push local 4
push constant 0
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push pointer 0
push local 3
push local 6
call Graphics.check1 3
push pointer 0
push local 5
push local 7
call Graphics.check2 3
and
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
not
return
label IF_FALSE6
label IF_FALSE5
label IF_FALSE4
push this 4
push constant 3
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 32
push this 0
push constant 16
add
call Math.multiply 2
push this 3
push constant 16
call Math.divide 2
add
push constant 16384
add
pop local 0
push constant 32
push this 1
push constant 1
add
call Math.multiply 2
push this 2
push constant 16
call Math.divide 2
add
push constant 16384
add
pop local 1
push local 0
call Memory.peek 1
pop local 3
push local 1
call Memory.peek 1
pop local 4
push this 2
push this 2
push constant 16
call Math.divide 2
push constant 16
call Math.multiply 2
sub
push constant 0
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push pointer 0
push local 4
push constant 8
call Graphics.check2 3
push pointer 0
push local 3
push constant 8
call Graphics.check1 3
and
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push constant 0
not
return
label IF_FALSE9
label IF_FALSE8
push this 2
push this 2
push constant 16
call Math.divide 2
push constant 16
call Math.multiply 2
sub
push constant 0
eq
not
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push pointer 0
push local 4
push constant 8
call Graphics.check1 3
push pointer 0
push local 3
push constant 8
call Graphics.check2 3
and
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push constant 0
not
return
label IF_FALSE11
label IF_FALSE10
label IF_FALSE7
push constant 0
return
function Graphics.check 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 2
add
push constant 16
lt
not
if-goto WHILE_END0
push argument 1
push constant 2
call Math.divide 2
pop argument 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push argument 1
push constant 2
call Math.divide 2
push constant 2
call Math.multiply 2
push argument 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Graphics.moveDown 0
push argument 0
pop pointer 0
push this 1
push constant 255
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push this 2
push this 0
call Graphics.erase 3
pop temp 0
push this 0
push constant 2
add
pop this 0
push this 1
push constant 2
add
pop this 1
push pointer 0
push this 2
push this 0
call Graphics.draw 3
pop temp 0
label IF_FALSE0
push constant 10
call Sys.wait 1
pop temp 0
push constant 0
return
